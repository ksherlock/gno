.TH "ENV" "1" "April 17, 2008" "GNO" "General Commands Manual"
.SH "NAME"
\fBenv\fR
\- set environment and execute command, or print environment
.SH "SYNOPSIS"
.HP 4n
\fBenv\fR
[\fB\-iv\fR]
[\fB\-P\fR\ \fIaltpath\fR]
[\fB\-u\fR\ \fIname\fR]
[\fB\-x\fR\ \fIprefix\fR=\fIpath\fR]
[\fIname\fR=\fIvalue\ ...\fR]
[\fIutility\fR\ [\fIargument\ ...\fR]]
.SH "DESCRIPTION"
The
\fBenv\fR
utility executes another
\fIutility\fR
after modifying the environment as
specified on the command line.
Each
\fIname\fR=\fIvalue\fR
option specifies the setting of an environment variable,
\fIname\fR,
with a value of
\fIvalue\fR.
All such environment variables are set before the
\fIutility\fR
is executed.
.PP
The options are as follows:
.IP "\fB\-i\fR" 8n
Execute the
\fIutility\fR
with only those environment variables specified by
\fIname\fR=\fIvalue\fR
options.
The environment inherited
by
\fBenv\fR
is ignored completely.
.IP "\fB\-P\fR \fIaltpath\fR" 8n
Search the set of directories as specified by
\fIaltpath\fR
to locate the specified
\fIutility\fR
program, instead of using the value of the
\fRPATH\fR
environment variable.
.IP "\fB\-u\fR \fIname\fR" 8n
If the environment variable
\fIname\fR
is in the environment, then remove it before processing the
remaining options.
This is similar to the
\fBunset\fR
command in
sh(1).
The value for
\fIname\fR
must not include the
\(oq=\(cq
character.
.IP "\fB\-v\fR" 8n
Print verbose information for each step of processing done by the
\fBenv\fR
utility.
Additional information will be printed if
\fB\-v\fR
is specified multiple times.
.IP "\fB\-x\fR \fIprefix\fR=\fIpath\fR" 8n
Set the GS/OS prefix
\fIprefix\fR
(0-31)
to
\fIpath\fR
before executing
\fIutility\fR.
This is similar to the
\fBprefix\fR
command in
gsh(1).
.PP
The above options are only recognized when they are specified
before any
\fIname\fR=\fIvalue\fR
options.
.PP
If no
\fIutility\fR
is specified,
\fBenv\fR
prints out the names and values
of the variables in the environment, with one name/value pair per line.
.SH "ENVIRONMENT"
The
\fBenv\fR
utility uses the
\fRPATH\fR
environment variable to locate the requested
\fIutility\fR
if the name contains no
\(oq/\(cq
characters, unless the
\fB\-P\fR
option has been specified.
.SH "EXIT STATUS"
.br
The \fBenv\fR utility exits\~0 on success, and\~>0 if an error occurs.
An exit status of 126 indicates that
\fIutility\fR
was found, but could not be executed.
An exit status of 127 indicates that
\fIutility\fR
could not be found.
.SH "EXAMPLES"
Compile a program using the ORCA/C libraries and headers:
.PP
.RS 6n
env -x 13=/lang/orca/Libraries occ ...
.RE
.SH "COMPATIBILITY"
The
\fBenv\fR
utility accepts the
\fB\-\fR
option as a synonym for
\fB\-i\fR.
.SH "SEE ALSO"
printenv(1),
sh(1),
execvp(3),
environ(7)
.SH "STANDARDS"
The
\fBenv\fR
utility conforms to
IEEE Std 1003.1-2001 (\(LqPOSIX.1\(Rq).
The
\fB\-P\fR, \fB\-S\fR, \fB\-x\fR, \fB\-u\fR
and
\fB\-v\fR
options are non-standard extensions supported by
FreeBSD,
but which may not be available on other operating systems.
.SH "HISTORY"
The
\fBenv\fR
command appeared in
4.4BSD.
The
\fB\-P\fR, \fB\-S\fR
and
\fB\-v\fR
options were added in
FreeBSD\ 6.0.
The
\fB\-x\fR
option was added to GNO/ME.
.SH "BUGS"
The
\fBenv\fR
utility does not handle values of
\fIutility\fR
which have an equals sign
(\(oq=\(cq)
in their name, for obvious reasons.
